model:
  model_name: academic 
  academic:
    task: segmentation
    model_type: Unet
    config_path: "./semantic_2d_segmentation.yaml"
data:
  data_path: "data/mmv_im2im/denoise/test/im"
  input_size: [1,128,128]
  dynamic_batch: [1,4,8] # min, opt, max
  io:
    input_names: ['input']
    output_names: ['output']
quantization:
  toolbox: mqbench #ppq or mqbench
  backend: openvino # tensorrt or openvino
  run_mode: int8 #int8 or fp32
  extra_config:
    extra_qconfig_dict: 
      w_observer: EMAQuantileObserver
      a_observer: EMAQuantileObserver
      w_fakequantize: FixedFakeQuantize
      a_fakequantize: FixedFakeQuantize
      w_qscheme: 
        bit: 8
        symmetry: True
        per_channel: False
        pot_scale: False
      a_qscheme: 
        bit: 8
        symmetry: True
        per_channel: False
        pot_scale: False
    extra_quantizer_dict:
      additional_function_type: 
        - torch.cat
prune:
  config_list:
    - sparsity_per_layer: 0.5
      op_types: 
        - Conv2d
        - Linear
  customized_replace_func: {}